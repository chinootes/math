{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["body"],"id":"body","weight":1,"src":"body","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Mathematics","n":1},"1":{"v":"\nThese notes are arranged into the below topics:\n\n- \n\n\n## References\n\nHierarchy inspiration: \n- [Map of Mathematics Poster](https://www.flickr.com/photos/95869671@N08/32786397946/in/dateposted-public/)\n- [The Map of Mathematics](https://www.youtube.com/watch?v=OmJ-4B-mS-Y)","n":0.224}}},{"i":2,"$":{"0":{"v":"Analysis","n":1}}},{"i":3,"$":{"0":{"v":"Func","n":1}}},{"i":4,"$":{"0":{"v":"Char","n":1}}},{"i":5,"$":{"0":{"v":"Idempotent","n":1},"1":{"v":"\nAn operation is said to be idempotent if performing it multiple times yields the same result as performing it once.\n","n":0.224}}},{"i":6,"$":{"0":{"v":"Deterministic","n":1},"1":{"v":"\nAn operation is said to be deterministic if its output is uniquely determined by its input.\n\nIn other words, given the same input, a deterministic function will always produce the same output, and there is no randomness or uncertainty involved.\n","n":0.16}}},{"i":7,"$":{"0":{"v":"Modelling","n":1}}},{"i":8,"$":{"0":{"v":"Ops","n":1}}},{"i":9,"$":{"0":{"v":"Scaling","n":1},"1":{"v":"\nScaling is the process of increasing/decreasing magnitude at which a mathematical entity operates by multiplication/division of the entity as a whole while preserving the information/behavior of the entity.\n\nThis operation typically manipulates the magnitude  - enlargening (scalling up) or reducing the magnitude (could be size, intensity, quantity or parameter).  \n","n":0.143}}},{"i":10,"$":{"0":{"v":"Phil","n":1}}},{"i":11,"$":{"0":{"v":"Incompleteness","n":1},"1":{"v":"\n## Godel's Incompleteness Theorem\n\nIt shows that in any axiomatic system will always be \"incomplete\". That is, there will always be certain statements in any axiomatic system, which will be true, but cannot be proven.\n\nThese unprovable true statements exist in every axiomatic system, making it impossible to create a \"complete\" axiomatic system.\n\nEven if you add such true statements as [[foundations.axioms]] to the system, that would create even more such \"unprovable\" true statements.\n\nBefore Godel, it was always believed, that every true statement can be proven, based on certain axioms.\n\n## An oversimplified proof\n\nConsider the below statements:\n\n> This statement is false.\n\nThe above statement can be true or false. But by referring to itself, the statment creates a #paradox. Creating such a self-referential paradox by words is easy. But mathematical equations don't refer to themselves.\n\n- To create such a statement, Godel came up with a numbering systems for mathematical objects, logical formulas, proofs, and other structures within formal systems using natural numbers. The key idea is to assign unique numerical codes (Gödel numbers) to each symbol, formula, or object in the system, allowing them to be manipulated and reasoned about within the framework of arithmetic.\n\n    Prime numbers were assigned to basic symbols. For formulas, which are combination of these basic symbols, the numbers were multiplied/exponentiated.\n\n    Using this system, he created the first self-referential mathematical equation, essentially saying \"This statement cannot be proven\".\n\n- Now mathematical equations cannot end up in paradoxes as the statement above. The statement must be true or false. \n\n    If it is false => It has a proof => It is true => **A true statement that cannot be proved**.\n\n\n## References\n\n- [The paradox at the heart of mathematics: Gödel's Incompleteness Theorem - Marcus du Sautoy - TED-Ed](https://youtu.be/I4pQbo5MQOs?si=_mZTxF13mLy_faK8)\n- [Gödel's Incompleteness Theorem - Numberphile - Marcus du Sautoy](https://youtu.be/O4ndIDcDSGc?si=sEw3zJIHsotvRhTa)\n- [Gödel’s Incompleteness Theorems - Stanford Encyclopedia of Philosophy](https://plato.stanford.edu/entries/goedel-incompleteness/)","n":0.058}}},{"i":12,"$":{"0":{"v":"Nums","n":1}}},{"i":13,"$":{"0":{"v":"Rational","n":1},"1":{"v":"\nP","n":1}}},{"i":14,"$":{"0":{"v":"Natural Numbers","n":0.707},"1":{"v":"\n$$\n1,2,3...\n$$\n\nSimplest form of quantities. Number of apples, seeds. Used wherever counting is needed.\n\nSimple dots on the number line.\n","n":0.236}}},{"i":15,"$":{"0":{"v":"Logic","n":1}}},{"i":16,"$":{"0":{"v":"Lambda Calculus","n":0.707},"1":{"v":"\n\nFormal system to study computations and functions.\n","n":0.378}}},{"i":17,"$":{"0":{"v":"Foundations","n":1}}},{"i":18,"$":{"0":{"v":"Axioms","n":1},"1":{"v":"\nAll of mathematics is based on the axiomatic method.\n\n## The Axiomatic Method\n\n**Axioms**: Basic truths. E.g. One line through two points kinda stuff. But these can be arbitrary in a mathematical system.\n\nTheories are formulated and proved based on the axioms.\n\nFor example,\n\nAxiom 1: All dogs are red.\nAxiom 2: Nick has a dog.\n\nTheory: Nick's dog is red.\n\nProof: From axiom 1 and 2 => Nick's dog is red. Q.E.D.\n\n## References\n\n- [Self Teach Mathematics: The Axiomatic Method | Library Vlog #12 - Autodidact - YouTube](https://www.youtube.com/watch?v=ECVaEVHFCHA&ab_channel=Autodidact)\n","n":0.112}}},{"i":19,"$":{"0":{"v":"Systems","n":1},"1":{"v":"\n- A collection of interconnected or interdependent components or elements that work together to achieve a common goal or function. \n- These components can be physical entities, abstract concepts, or processes. \n- Systems can range from simple, such as a mechanical gear system, to highly complex, like an ecosystem or an economic market. \n\n## Systems Theory\n\nSystems are often studied to understand their structure, behavior, and dynamics, with the goal of predicting or controlling their outcomes.\n\n## References\n\n- [Introduction to Systems Theory](https://youtu.be/jY7638w6gkI?si=tXXixWIn6undINjq)","n":0.112}}},{"i":20,"$":{"0":{"v":"Types","n":1}}},{"i":21,"$":{"0":{"v":"Open","n":1},"1":{"v":"\nAn open system interacts with the environment. The output changes because of that.","n":0.277}}},{"i":22,"$":{"0":{"v":"Closed","n":1},"1":{"v":"\nIsolated systems which don't interact (aren't affected) by the environemnt around them.\n","n":0.289}}},{"i":23,"$":{"0":{"v":"Ops","n":1}}},{"i":24,"$":{"0":{"v":"Pre-Processing","n":1},"1":{"v":"\nPreliminary steps or activities performed on [[systems.def.input]] before the actual processing.\n\n- If done before each cycle or iteration of system, it can help reduce [[systems.char.performance.i.latency]].\n- If done in batches before taking in multiple inputs, it can help increase [[systems.char.performance.i.throughput]].","n":0.16}}},{"i":25,"$":{"0":{"v":"Char","n":1}}},{"i":26,"$":{"0":{"v":"Performance","n":1}}},{"i":27,"$":{"0":{"v":"Indicators","n":1},"1":{"v":"\nQuantities which can be used to measure performance of a system.","n":0.302}}},{"i":28,"$":{"0":{"v":"Throughput","n":1},"1":{"v":"\n$$\nOutput/Input\n$$\n\n\nThroughput is the capacity of system to handle workload. It measures how much output a system can product for a given input.","n":0.213}}},{"i":29,"$":{"0":{"v":"Latency","n":1},"1":{"v":"\n$$\n    t_o - t_i\n$$\n\nLatency is the delay between providing input to a sytem and getting output back from the system. ","n":0.224}}},{"i":30,"$":{"0":{"v":"Scalable","n":1},"1":{"v":"\nA system, process or solution is said to be scalable if it has the ability to handle growth, expansion or increased demand by adding resources to the system.\n\nIn other words, it is able to handle [[modelling.ops.scaling]].\n","n":0.167}}},{"i":31,"$":{"0":{"v":"Design","n":1},"1":{"v":"\nCreating, planning, or structuring [[systems]].\n\nIt involves analyzing the components, interactions, and functions of the system, as well as considering external factors, constraints, and stakeholders' needs to develop a comprehensive and coherent solution.","n":0.177}}},{"i":32,"$":{"0":{"v":"Defining","n":1},"1":{"v":"\nTo define a system clearly, you need to define the following attributes clearly.\n\n- [[systems.def.components]]\n- [[systems.def.interactions]]\n- [[systems.def.boundaries]]\n- [[systems.def.input]]s\n- [[systems.def.output]]s\n- [[systems.def.purpose]]\n- [[systems.def.emergent props]]\n- [[systems.def.feedback]]","n":0.213}}},{"i":33,"$":{"0":{"v":"Purpose","n":1},"1":{"v":"\nA system operates with a specific purpose, goal, or objective in mind. The purpose defines the reason for the system's existence and the desired outcomes or behaviors it aims to achieve. Understanding the purpose of the system helps in identifying its functions, priorities, and performance criteria.","n":0.147}}},{"i":34,"$":{"0":{"v":"Output","n":1},"1":{"v":"\nOutputs are the results, outcomes, or products produced by the system and released into its environment. Outputs represent the effects, responses, or transformations that occur within the system as a result of its internal processes and interactions. Outputs can include physical outputs such as products or waste, informational outputs such as feedback or responses, and environmental changes caused by the system.","n":0.128}}},{"i":35,"$":{"0":{"v":"Interactions","n":1},"1":{"v":"\nComponents within a system interact with each other through various relationships, dependencies, or feedback loops. Interactions may involve exchanges of energy, matter, information, or signals that influence the behavior and state of the system.","n":0.171}}},{"i":36,"$":{"0":{"v":"Input","n":1},"1":{"v":"\nInputs are external factors, stimuli, or resources that enter the system from its environment. Inputs provide the system with the necessary energy, information, or materials to function and to produce outputs. Inputs can include physical inputs such as energy or matter, informational inputs such as data or signals, and environmental conditions that affect the system.\n","n":0.135}}},{"i":37,"$":{"0":{"v":"Feedback","n":1},"1":{"v":"\n**Feedback loops** within a system involve the transmission of information or signals that influence the system's behavior or state. \n\n## Positive Feedback Loop (reinforcing)\n\nOutputs that have worked well.\n\n## Negative Feedback Loop (stabilizing)\n\nIndicates problem which needs to be corrected.\n","n":0.162}}},{"i":38,"$":{"0":{"v":"Emergent Properties","n":0.707},"1":{"v":"\nSystems exhibit emergent properties that arise from the interactions and relationships between their components. Emergent properties are characteristics or behaviors of the system as a whole that cannot be explained solely by the properties of individual components. These properties may include self-organization, complexity, stability, or resilience.\n\n\nFor example, culture of an organization.","n":0.14}}},{"i":39,"$":{"0":{"v":"Component","n":1},"1":{"v":"\nSystem consists of multiple components or elements that work together to achieve specific objectives or functions. These components can be physical entities, subsystems, processes, or variables that interact within the system.","n":0.18}}},{"i":40,"$":{"0":{"v":"Boundaries","n":1},"1":{"v":"\nA system is delineated by a boundary that separates it from its environment. The boundary defines what is included within the system and what lies outside of it. It helps in distinguishing the system from its surroundings and in identifying the inputs and outputs that flow across the boundary.","n":0.143}}},{"i":41,"$":{"0":{"v":"Games","n":1},"1":{"v":"\nGames are strategic interactions among rational agents.\n\n## Game Theory\n\nStudy of mathematical models of such interactions.\n\n### Origins\n\nMost of the game theory today originated because of mathematician, physict and computer scientist named John von Neumann.\n\nNeumann wanted to develop mathematics of life itself, using poker as the means. He wanted to develop a general theory, that can be applied to diplomacy, love, war, evolution or business strategy.\n\nIn his book with Oskar Morgenstern titled \"The Theory of Games and Economic Behaviour\", they asserted that any economic situation could be defined as the outcome of a game between two or more players.","n":0.102}}},{"i":42,"$":{"0":{"v":"Tx","n":1}}},{"i":43,"$":{"0":{"v":"Prisoners Dilemma","n":0.707},"1":{"v":"\nThis game can be formulated or described in many ways, but the basic structure of the game is that there has two prisoners. Lets call them A and B. Both are accused of some crime. Now, both prisoners are taken into separate rooms and questioned. \n\nNeither A, nor B knows what the other one is going to act. They can choose to cooperate or defect. Based on how they choose to act, the prisoners will get [[games.comps.payoffs]]\n\nLet C denote co-operation from the prisoner's side and D denote defection. We will just consider the \"weights\" of the payoffs in our case, doesn't matter what the reward is. \n\nHere is a [[games.representation.normal form]] representation of the game: \n\n|       |      | **B** | \n|-------|-----|------|-------|\n|       |     |   C  |  D    |\n| **A** |   C | 3, 3 | 0, 5  |\n|       |   D | 5, 0 | 1, 1  |\n\n\n\nThe dilemma for prisoner is to choose whether to defect or to cooperate.\n\n❗Note that its important for the rewards to be in this order. The exact number don't matter that much, but the points should be such that the reward, is greatest when one player defects, and least when both defect. The reward when both cooperate should also be somewhere in middle. The rewards are ordered this way to make it a dilemma and also to model most real-life problems.\n\n## One-shot\n\nIf you're shortsighted, you can think of it as only a single/one-time game. \n\nOf course, the best outcome for both players or win-win situation in this case will be if both choose to cooperate. \n\nBut what if the other person defects, in that case you will be stuck with zero points while the other person gets all the rewards.\n\nBut if you defect, and the other person cooperates, you get all the reward.\n\nTherefor, no matter what, the [[games.comps.strategy.dominant]] seems to be, to always defect.\n\nIf your oponent is rational, they will also reach the same conclusion and always defect. Thus, reaching a [[games.comps.strategy.dominant.equilibrium]].\n\nIn such cases, both agents are stuck with the suboptimal reward 1-1, where they could both have gotten 3-3 each if they chose to cooperate.\n\n\n## Series\n\nMost real-world problems are not a single prisoner's dilemma. Its a series of such games. And you have to be long-sighted when deciding your [[games.comps.strategy]]\n","n":0.052}}},{"i":44,"$":{"0":{"v":"Representation","n":1}}},{"i":45,"$":{"0":{"v":"Normal Form","n":0.707},"1":{"v":"\nMatrix representing [[games]].\n\n1. The [[games.comps.players]] are represented as the two axes.\n2. The [[games.comps.strategy]]s for each player are represented as the rows and columns.\n3. The [[games.comps.payoffs]] are mentioned inside the cells of the matrix.\n\n    Payoffs are listed in order X, Y. That is, payoffs for player whose strategies are listed in rows or x-axis (in this case, player A) are written first, followed by payoff for the player whose strategies are written in columns or y-axis (in this case, player B).\n\n|          |       |      Player B       |\n-----------|-------|----------|----------|\n|          |       | SB1      | SB2      |\n| Player A |   SA1 | A11, B11 | A12, B12 |\n|          |   SA2 | A21, B21 | A22, B22 |\n","n":0.095}}},{"i":46,"$":{"0":{"v":"Characteristics","n":1}}},{"i":47,"$":{"0":{"v":"Zero Sum","n":0.707},"1":{"v":"\n\nA zero sum game is where ones loss is anothers gain. One person has to lose in order for other to win.\n\nAlso, players can neither increase or decrease their resources in a zero-sum game.","n":0.171}}},{"i":48,"$":{"0":{"v":"Non Zero Sum","n":0.577}}},{"i":49,"$":{"0":{"v":"Components","n":1},"1":{"v":"A game is defined to have three components:\n\n1. [[games.comps.players]]\n2. [[games.comps.strategy]]s\n3. [[games.comps.payoffs]]\n\nAlthough, in real-life scenarios, there might be a little [[games.comps.noise]].","n":0.224}}},{"i":50,"$":{"0":{"v":"Strategy","n":1},"1":{"v":"\n\nStrategy is the option which an agent chooses in cases where the outcome depends on not only ones own actions, but also on actions of other agents. \n\n## Strategic Interdependence\n\nActions of each side depends on what the other side would do.  ","n":0.156}}},{"i":51,"$":{"0":{"v":"Characteristics","n":1}}},{"i":52,"$":{"0":{"v":"Successful Characteristics","n":0.707},"1":{"v":"\n1. [[games.comps.strategy.characteristics.nice]]\n2. [[games.comps.strategy.characteristics.forgiving]]\n3. [[games.comps.strategy.characteristics.provokable]] \n\n\n## References\n\n- [More effective choice in the prisoner's dilemma - Robert Axelrod](https://journals.sagepub.com/doi/10.1177/002200278002400301)","n":0.25}}},{"i":53,"$":{"0":{"v":"Provokable","n":1},"1":{"v":"\nA retaliatory or less provokable strategy retaliates if the opponent defects. You can also call it \"not being a pushover\".\n","n":0.224}}},{"i":54,"$":{"0":{"v":"Nice","n":1},"1":{"v":"\nNiceness of a strategy indicates how often is a strategy likely to be the first one to defect. \n\nA player following a nice or cooperative strategy will never be the first one to defect.\n\nA player following a nasty strategy won't shy away from being the first one to defect.\n","n":0.143}}},{"i":55,"$":{"0":{"v":"Forgiving","n":1},"1":{"v":"\nA forgiving strategy can retaliate, but it doesn't hold grudges. It will cooperate if the opponent does too. \n","n":0.229}}},{"i":56,"$":{"0":{"v":"Tit for Tat","n":0.577},"1":{"v":"\nTit for tat is a [[games.comps.strategy.characteristics.nice]], [[games.comps.strategy.characteristics.forgiving]] and [[games.comps.strategy.characteristics.provokable]] [[games.comps.strategy]], which starts with cooperating(nice), but retaliates if the opponent defects(provokable). Although, it doesn't hold grudges and starts cooperating again, right from the next move if the opponent also cooperates.\n\n\n## Other versions\n\n### Tit fot two tats\n\nIt is a more [[games.comps.strategy.characteristics.forgiving]] version of tit-for-tat, which retaliates if the opponent defects twice in a row.\n\n### Generous Tit for tat\n\nGenerous TFT makes TFT 10% less [[games.comps.strategy.characteristics.provokable]]. That is, it would retaliate 9 out of every 10 times. \n\n## Loopholes\n\nWhile TFT comes out on top in general, there are certain scenarios where TFT can lead to a chain of continous defections.\n\nFor example, when playing with a little sneaky version of itself, Joss. Joss is same as TFT, but it sneaks in a defection 10% of the time to see how the opponent would react. \n\nWhen playing with Joss, both would start well. But as soon as Joss defects, TFT and Joss would get stuck in an alternating cycle of cooperate and defect. What is worse is if Joss defects twice, then its endless defection for both leading to a lose-lose situation.\n\nIn such cases, being a little forgiving might be helpful. So TFTT might help. Although, it also has a loophole. It might be a little too forgiving.\n\nSince it only retaliates if the opponent defects twice in a row, any strategy which defects alternatively would never trigger retaliation in TFTT.\n\n## Breaking out of echo effects and accounting for [[games.comps.noise]] - Self-healing with GTFT\n\nIn situation like the one mentioned above, or when there is some defection due to [[games.comps.noise]] in the system, it might help to be a little more forgiving and allowing the system to self-heal, by not-deflecting everytime the opponent deflects.  \n\nSo when a system falls into a cooperating and defecting back and forth, or even a continuous defection, the strategy can maybe for once ignore a defection and let the opponent have a chance to change. If it does, well and good, both players might be back to cooperating again and end up in a win-win situation. \n\nThis can be achieved by GTFT, which doesn't retaliate 10% of the time.\n\n## Misconception - TFT can never do better than its opponent\n\nBy design, TFT can only loose or at best have a draw with its opponent. \n\nOn the other hand, the \"Always deflect\" strategy will always draw or win.\n\nWhile this is true in a one on one game series with a single opponent, most of life is not like that. When there are multiple agents involved with, different strategies and different [[games.comps.noise]]s at play, the results are totally different. [[games.tx.prisoners dilemma]] is a [[games.characteristics.non-zero sum]] game. Therefore, TFT is not always getting its reward from other player.\n\nIn such games, winning is not as important as securing the most number of points. Since you are not getting your reward from the other player, but from a third-party. And TFT eventually ends up gaining most points even by just drawing most games. While, \n\n\n## References\n\n- [What Game Theory Reveals About Life, The Universe, and Everything](https://youtu.be/mScpHTIi-kM?si=o7xrUENEl5Jpz0Dc)","n":0.044}}},{"i":57,"$":{"0":{"v":"Nash Equilibrium","n":0.707},"1":{"v":"\nNash equilibrium is an **outcome** where neither of the players have incentive to change their behaviour, given the action of other player.","n":0.213}}},{"i":58,"$":{"0":{"v":"Dominant Strategy","n":0.707},"1":{"v":"\nDominant strategy for a player is any strategy which yields the highest [[games.comps.payoffs]] for the player, irrespective of the other player's move.","n":0.213}}},{"i":59,"$":{"0":{"v":"Dominant Strategy Equilibrium","n":0.577},"1":{"v":"\nWhen both player have the same dominant strategies.","n":0.354}}},{"i":60,"$":{"0":{"v":"Players","n":1},"1":{"v":"\nPlayers are _rational_ agents in a game capable of making decisions and responding to other players actions. However the rational part is debatable. \n\nAlmost all theories are based on the assumptions that agents are rational players who strive to maximize their [[games.comps.payoffs]], yet studies demonstrate that players do not always act rationally (big surprise!). Thus, the conclusions of rational analysis sometimes fail to conform to reality.\n\nThe players share a common knowledge of the rules, available strategies and possible payoffs. However, its not necessary that players always have perfect knowledge of these elements.\n","n":0.104}}},{"i":61,"$":{"0":{"v":"Payoffs","n":1},"1":{"v":"\nBased on how the [[games.comps.players]] choose to act, the players will be rewarded, or not. The payoff can be anything from reduced sentence, peace treaty, to  increased profits or coins depending on the game formulation.\n\nThe goal of the game is to get as much payoff as possible.","n":0.146}}},{"i":62,"$":{"0":{"v":"Noise","n":1},"1":{"v":"\nNoises are random or uncertain elements in a \"game\". This is almost always encountered in real-life scenarios. This can completely change the outcome of a game as this could mean that a player tried to cooperate but it came across as deflection, or vise-versa.\n\nFor example, in 1983, the Soviet satellite-based early warning system detected a launch of an intercontinental ballistic missile from the US, but the US hadn't actually launched anything. The Soviet system had confused sunlight reflecting off of high-altitude clouds with a ballistic missile. Thankfully, Stanislav Petrov, the Soviet officer on-duty dismissed the alarm.","n":0.102}}},{"i":63,"$":{"0":{"v":"Algebra","n":1},"1":{"v":"\nBranch of mathematics that deals with symbols and the rules for manipulating these symbols.","n":0.267}}}]}
